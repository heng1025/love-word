// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Qs from "qs";
import Md5 from "md5";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Functions from "./Functions.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

async function translate(q) {
  return await Functions.fetchByHttp("/dict?q=" + q, undefined, undefined);
}

var OfflineDict = {
  translate: translate
};

var endpoint = "https://api.fanyi.baidu.com/api/trans/vip/translate";

function textToSpeech(text) {
  var query = Qs.stringify({
        audio: text,
        le: "zh"
      });
  return "https://dict.youdao.com/dictvoice?" + query;
}

async function translate$1(q) {
  try {
    var val = await chrome.storage.local.get(["baiduKey"]);
    var result = val !== undefined ? Caml_option.valFromOption(val).baiduKey : Js_exn.raiseError("No translation key");
    var queryUrl;
    if (result == null) {
      queryUrl = Js_exn.raiseError("No translation key");
    } else {
      var appid = result.appid;
      var key = result.secret;
      var salt = Date.now().toString();
      var sign = Md5(appid + q + salt + key);
      var sl = Functions.getSourceLang(q);
      var tlDict = Js_dict.fromList({
            hd: [
              "cmn",
              "en"
            ],
            tl: /* [] */0
          });
      var val$1 = Js_dict.get(tlDict, sl);
      var query = Qs.stringify({
            q: q,
            from: "auto",
            to: val$1 !== undefined ? val$1 : "zh",
            appid: appid,
            salt: salt,
            sign: sign
          });
      queryUrl = endpoint + "?" + query;
    }
    var res = await fetch(queryUrl, undefined);
    var data = await res.json();
    var msg = data.error_msg;
    if (msg !== undefined) {
      return {
              TAG: "Error",
              _0: msg
            };
    }
    var val$2 = data.trans_result;
    if (val$2 !== undefined) {
      return {
              TAG: "Ok",
              _0: val$2
            };
    } else {
      return {
              TAG: "Error",
              _0: "No Translation"
            };
    }
  }
  catch (raw_err){
    var err = Caml_js_exceptions.internalToOCamlException(raw_err);
    if (err.RE_EXN_ID !== Js_exn.$$Error) {
      return {
              TAG: "Error",
              _0: "Unexpected error occurred"
            };
    }
    var msg$1 = err._1.message;
    if (msg$1 !== undefined) {
      return {
              TAG: "Error",
              _0: msg$1
            };
    } else {
      return {
              TAG: "Error",
              _0: "error"
            };
    }
  }
}

var Baidu = {
  endpoint: endpoint,
  textToSpeech: textToSpeech,
  translate: translate$1
};

export {
  OfflineDict ,
  Baidu ,
}
/* qs Not a pure module */
