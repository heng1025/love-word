// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Functions from "./Functions.js";
import * as TranSource from "./TranSource.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

async function adapterTrans(text) {
  var sl = Functions.getSourceLang(text);
  var wordCount = text.split(" ");
  var baiduResult = async function () {
    var res = await TranSource.Baidu.translate(text);
    if (res.TAG === "Ok") {
      return {
              TAG: "Ok",
              _0: res._0
            };
    } else {
      return {
              TAG: "Error",
              _0: res._0
            };
    }
  };
  if (sl !== "eng" || wordCount.length > 4) {
    return await baiduResult();
  }
  var val = await TranSource.OfflineDict.translate(text);
  if (val.TAG === "Ok") {
    return {
            TAG: "Ok",
            _0: val._0
          };
  } else {
    return await baiduResult();
  }
}

async function recordRemoteAction(recordType, data, methodOpt) {
  var method = methodOpt !== undefined ? methodOpt : "post";
  var loginInfo = await chrome.storage.local.get(["user"]);
  var match = loginInfo.user;
  if (match == null) {
    return {
            TAG: "Error",
            _0: "nothing"
          };
  }
  var rType;
  rType = recordType === "history" ? "1" : "2";
  var url = "/records?type=" + rType;
  if (data !== undefined) {
    return await Functions.fetchByHttp(url, method, Caml_option.some(Caml_option.valFromOption(data)));
  } else {
    return await Functions.fetchByHttp(url, undefined, undefined);
  }
}

export {
  adapterTrans ,
  recordRemoteAction ,
}
/* Functions Not a pure module */
