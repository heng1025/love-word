// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Widget from "./Widget.js";
import * as JsxRuntime from "react/jsx-runtime";

function DictPanel(props) {
  var data = props.data;
  var match = React.useState(function () {
        return null;
      });
  var setAudio = match[1];
  var audio = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setAudioState = match$1[1];
  var trans = data.translation.split("\n").map(function (v) {
        return JsxRuntime.jsx("p", {
                    children: v,
                    className: "mt-[2px]"
                  }, v);
      });
  React.useEffect((function () {
          var src = "https://dict.youdao.com/dictvoice?audio=" + data.word + "&type=1";
          var au = new Audio(src);
          setAudio(function (param) {
                return au;
              });
          if (au !== null) {
            au.onended = (function () {
                setAudioState(function (_p) {
                      return false;
                    });
              });
          }
          
        }), []);
  var play = function (param) {
    setAudioState(function (p) {
          return !p;
        });
    if (audio !== null) {
      audio.play();
      return ;
    }
    
  };
  var match$2 = data.phonetic !== "";
  var match$3 = data.tag !== "";
  return JsxRuntime.jsxs("div", {
              children: [
                match$2 ? JsxRuntime.jsxs("div", {
                        children: [
                          JsxRuntime.jsx("span", {
                                children: "[ " + data.phonetic + " ]",
                                className: "mr-2"
                              }),
                          JsxRuntime.jsx(Widget.Speaker.make, {
                                isPlay: match$1[0],
                                onClick: play,
                                className: "w-5 h-5"
                              })
                        ],
                        className: "inline-flex items-center"
                      }) : null,
                JsxRuntime.jsx("div", {
                      children: trans,
                      className: "my-2"
                    }),
                JsxRuntime.jsx("div", {
                      children: match$3 ? data.tag.split(" ").map(function (v) {
                              return JsxRuntime.jsx(Widget.Tag.make, {
                                          className: "bg-secondary mr-1 mb-1",
                                          role: "mark",
                                          children: v
                                        }, v);
                            }) : null
                    })
              ]
            });
}

var make = DictPanel;

export {
  make ,
}
/* react Not a pure module */
