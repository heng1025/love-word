// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Widget from "./Widget.js";
import * as DictPanel from "./DictPanel.js";
import * as MachineTPanel from "./MachineTPanel.js";

function TranslateResult$TranslateResult(props) {
  var className = props.className;
  var data = props.data;
  var className$1 = className !== undefined ? className : "";
  var tmp;
  tmp = data.TAG === /* DictT */0 ? React.createElement(DictPanel.make, {
          data: data.dict
        }) : React.createElement(MachineTPanel.make, {
          data: data.baidu
        });
  return React.createElement("div", {
              className: "" + className$1 + " lw-scroll-wrap max-h-52 overflow-y-auto overscroll-contain"
            }, tmp);
}

var TranslateResult = {
  make: TranslateResult$TranslateResult
};

function TranslateResult$TranslateResultWithState(props) {
  var className = props.className;
  var delay = props.delay;
  var data = props.data;
  var delay$1 = delay !== undefined ? delay : 0;
  var className$1 = className !== undefined ? className : "";
  if (typeof data === "number") {
    return null;
  }
  switch (data.TAG | 0) {
    case /* TResult */0 :
        return React.createElement(TranslateResult$TranslateResult, {
                    data: data._0,
                    className: className$1
                  });
    case /* TLoading */1 :
        if (data._0) {
          return React.createElement(Widget.Loading.make, {
                      delay: delay$1
                    });
        } else {
          return null;
        }
    case /* TError */2 :
        return React.createElement("div", {
                    className: "text-error"
                  }, data._0);
    
  }
}

var TranslateResultWithState = {
  make: TranslateResult$TranslateResultWithState
};

export {
  TranslateResult ,
  TranslateResultWithState ,
}
/* react Not a pure module */
