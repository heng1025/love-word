// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as TranslateHook from "../hooks/TranslateHook.js";
import * as TranslateResult from "../components/TranslateResult.js";

var common = chrome.runtime.getURL("assets/common.css");

function ContentApp(Props) {
  var host = Props.host;
  var match = React.useState(function () {
        return "0";
      });
  var setTop = match[1];
  var match$1 = React.useState(function () {
        return "0";
      });
  var setLeft = match$1[1];
  var match$2 = React.useState(function () {
        return "0";
      });
  var setOpactity = match$2[1];
  var opacity = match$2[0];
  var hook = TranslateHook.useTranslate(undefined);
  React.useEffect((function () {
          var handleKeyup = function (ev) {
            if (ev.keyCode === 18) {
              var selection = window.getSelection();
              var range = selection.getRangeAt(0);
              var rect = range.getBoundingClientRect();
              setTop(function (_p) {
                    return "" + (rect.top + rect.height).toString() + "px";
                  });
              setLeft(function (_p) {
                    return "" + rect.left.toString() + "px";
                  });
              var text = selection.toString().trim();
              if (text !== "") {
                hook.handleTranslate(text);
                return setOpactity(function (_p) {
                            return "1";
                          });
              } else {
                return ;
              }
            }
            
          };
          window.addEventListener("keyup", handleKeyup);
          return (function (param) {
                    window.removeEventListener("keyup", handleKeyup);
                  });
        }), []);
  React.useEffect((function () {
          var handleClick = function (e) {
            e.stopPropagation();
            if (opacity === "1" && !host.contains(e.target)) {
              return setOpactity(function (_p) {
                          return "0";
                        });
            }
            
          };
          window.addEventListener("click", handleClick);
          return (function (param) {
                    window.removeEventListener("click", handleClick);
                  });
        }), [opacity]);
  var mouseState = React.useMemo((function () {
          if (opacity === "1") {
            return "auto";
          } else {
            return "none";
          }
        }), [opacity]);
  var style = {
    left: match$1[0],
    top: match[0],
    opacity: opacity
  };
  return React.createElement("div", {
              className: "absolute z-[99999] pointer-events-" + mouseState + " select-" + mouseState + "",
              style: style
            }, React.createElement("link", {
                  href: common,
                  rel: "stylesheet"
                }), React.createElement("div", {
                  className: "card w-52 bg-primary text-primary-content"
                }, React.createElement("div", {
                      className: "card-body p-4"
                    }, React.createElement("h4", {
                          className: "card-title text-sm border-b"
                        }, "译文："), React.createElement(TranslateResult.make, {
                          loading: hook.loading,
                          errText: hook.errText,
                          results: hook.results,
                          className: "text-sm min-h-6"
                        }))));
}

var make = ContentApp;

export {
  common ,
  make ,
}
/* common Not a pure module */
