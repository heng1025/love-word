// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Utils from "../Utils.js";
import * as React from "react";
import * as Widget from "../components/Widget.js";
import * as FavButton from "../components/FavButton.js";
import * as TranslateHook from "../hooks/TranslateHook.js";
import * as TranslateResult from "../components/TranslateResult.js";

var common = chrome.runtime.getURL(__CONTENT_CSS__);

function ContentApp(props) {
  var host = props.host;
  var match = React.useState(function () {
        return "";
      });
  var setSourceText = match[1];
  var sourceText = match[0];
  var match$1 = React.useState(function () {
        return "eng";
      });
  var setSrcLang = match$1[1];
  var match$2 = React.useState(function () {
        return "0";
      });
  var setTop = match$2[1];
  var match$3 = React.useState(function () {
        return "0";
      });
  var setLeft = match$3[1];
  var match$4 = React.useState(function () {
        return "0";
      });
  var setOpactity = match$4[1];
  var opacity = match$4[0];
  var match$5 = TranslateHook.useTranslate(sourceText);
  var data = match$5.data;
  React.useEffect((function () {
          var handleKeyup = function (ev) {
            if (ev.keyCode !== 18) {
              return ;
            }
            var selection = window.getSelection();
            var text = selection.toString().trim();
            if (!(selection.rangeCount > 0 && text !== "")) {
              return ;
            }
            var range = selection.getRangeAt(0);
            var sl = Utils.getSourceLang(text);
            setSrcLang(function (param) {
                  return sl;
                });
            setSourceText(function (param) {
                  return text;
                });
            var rect = range.getBoundingClientRect();
            var top = rect.top + rect.height + window.scrollY;
            var left = rect.left + window.scrollX;
            setTop(function (_p) {
                  return "" + (top + 8.0).toString() + "px";
                });
            setLeft(function (_p) {
                  return "" + left.toString() + "px";
                });
            var match = Utils.Lib.debounce(200, (function () {
                    return setOpactity(function (_p) {
                                return "1";
                              });
                  }));
            match[0]();
          };
          window.addEventListener("keyup", handleKeyup);
          return (function (param) {
                    window.removeEventListener("keyup", handleKeyup);
                  });
        }), []);
  React.useEffect((function () {
          var handleClick = function (e) {
            e.stopPropagation();
            if (opacity === "1" && !host.contains(e.target)) {
              setTop(function (param) {
                    return "0";
                  });
              setLeft(function (param) {
                    return "0";
                  });
              setOpactity(function (_p) {
                    return "0";
                  });
              return setSourceText(function (param) {
                          return "";
                        });
            }
            
          };
          window.addEventListener("click", handleClick);
          return (function (param) {
                    window.removeEventListener("click", handleClick);
                  });
        }), [opacity]);
  var mouseState = React.useMemo((function () {
          if (opacity === "1") {
            return "pointer-events-auto select-auto";
          } else {
            return "pointer-events-none select-none";
          }
        }), [opacity]);
  var style = {
    left: match$3[0],
    top: match$2[0],
    opacity: opacity
  };
  var tmp;
  switch (match$1[0]) {
    case "cmn" :
        tmp = React.createElement(Widget.Zh2en.make, {});
        break;
    case "eng" :
        tmp = React.createElement(Widget.En2zh.make, {});
        break;
    default:
      tmp = null;
  }
  var tmp$1;
  tmp$1 = data !== undefined && data.TAG === /* Ok */0 ? React.createElement(FavButton.make, {
          text: sourceText,
          trans: data._0
        }) : null;
  return React.createElement("div", {
              className: "absolute z-[99999] " + mouseState + "",
              style: style
            }, React.createElement("link", {
                  href: common,
                  rel: "stylesheet"
                }), React.createElement("div", {
                  className: "card w-52 bg-primary text-primary-content"
                }, React.createElement("div", {
                      className: "card-body p-3"
                    }, React.createElement("h4", {
                          className: "card-title text-sm border-b justify-between"
                        }, React.createElement("span", undefined, tmp), React.createElement("div", {
                              className: "flex items-center"
                            }, tmp$1, React.createElement(Widget.Link.make, {
                                  children: React.createElement(Widget.Jump.make, {}),
                                  href: "https://fanyi.baidu.com/#en/zh/" + sourceText + ""
                                }))), React.createElement(TranslateResult.TranslateResultWithState.make, {
                          loading: match$5.loading,
                          data: data,
                          delay: 200,
                          className: "text-sm"
                        }))));
}

var panelDelay = 200;

var make = ContentApp;

export {
  common ,
  panelDelay ,
  make ,
}
/* common Not a pure module */
