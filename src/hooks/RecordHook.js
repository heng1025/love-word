// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";

function includeWith(target, substring) {
  return new RegExp(substring).test(target);
}

function useRecord(recordType) {
  var match = React.useState(function () {
        return [];
      });
  var setRecords = match[1];
  var records = match[0];
  var getDeleteManyMsgContent = function (dates) {
    if (recordType) {
      return {
              TAG: /* FavDeleteManyMsgContent */4,
              _0: dates
            };
    } else {
      return {
              TAG: /* HistoryDeleteManyMsgContent */7,
              _0: dates
            };
    }
  };
  var getAll = async function (param) {
    var ret = await chrome.runtime.sendMessage(recordType ? ({
              TAG: /* FavExtraMsgContent */5,
              _0: /* GetAll */0
            }) : ({
              TAG: /* HistoryExtraMsgContent */8,
              _0: /* GetAll */0
            }));
    var rs = ret.sort(function (v1, v2) {
            return v2.date - v1.date | 0;
          }).map(function (v) {
          v.checked = false;
          return v;
        });
    return setRecords(function (param) {
                return rs;
              });
  };
  React.useEffect((function () {
          getAll(undefined);
        }), [recordType]);
  var onSearch = function (val) {
    if (val !== "") {
      var rs = records.filter(function (item) {
            var target = item.text;
            return new RegExp(val).test(target);
          });
      return setRecords(function (param) {
                  return rs;
                });
    }
    getAll(undefined);
  };
  var onCheck = function (record) {
    var rs = records.map(function (v) {
          var date = record.date;
          var checked = record.checked;
          if (date === v.date) {
            v.checked = !checked;
          }
          return v;
        });
    setRecords(function (param) {
          return rs;
        });
  };
  var onCancel = function () {
    var rs = records.map(function (v) {
          v.checked = false;
          return v;
        });
    return setRecords(function (param) {
                return rs;
              });
  };
  var onDelete = async function (checkedRecords) {
    await chrome.runtime.sendMessage(getDeleteManyMsgContent({
              dates: checkedRecords.map(function (v) {
                    return v.date;
                  })
            }));
    return await getAll(undefined);
  };
  var onClear = async function () {
    await chrome.runtime.sendMessage(recordType ? ({
              TAG: /* FavExtraMsgContent */5,
              _0: /* Clear */1
            }) : ({
              TAG: /* HistoryExtraMsgContent */8,
              _0: /* Clear */1
            }));
    return await getAll(undefined);
  };
  return {
          records: records,
          onCheck: onCheck,
          onSearch: onSearch,
          onDelete: (function (args) {
              onDelete(args);
            }),
          onClear: (function () {
              onClear();
            }),
          onCancel: onCancel
        };
}

export {
  includeWith ,
  useRecord ,
}
/* react Not a pure module */
