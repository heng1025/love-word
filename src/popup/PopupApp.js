// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Utils from "../utils.js";
import * as React from "react";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function PopupApp(Props) {
  var match = React.useState(function () {
        return /* None */2;
      });
  var setLoading = match[1];
  var match$1 = React.useState(function () {
        return "";
      });
  var setResult = match$1[1];
  var match$2 = React.useState(function () {
        return "";
      });
  var setText = match$2[1];
  var text = match$2[0];
  var textInput = React.useRef(null);
  var setTextInputRef = function (element) {
    textInput.current = element;
  };
  var handleChange = function ($$event) {
    var value = $$event.target.value;
    setText(function (param) {
          return value;
        });
  };
  var translate = function (param) {
    if (text !== "") {
      setLoading(function (_p) {
            return /* Yes */0;
          });
      $$Promise.$$catch(Utils.translate(text).then(function (ret) {
                setResult(function (_p) {
                      return ret;
                    });
                setLoading(function (_p) {
                      return /* No */1;
                    });
                return Promise.resolve(undefined);
              }), (function (param) {
              setResult(function (_p) {
                    return "~Oops Err~";
                  });
              setLoading(function (_p) {
                    return /* No */1;
                  });
              return Promise.resolve(undefined);
            }));
      return ;
    } else {
      return Belt_Option.forEach(Caml_option.nullable_to_opt(textInput.current), (function (input) {
                    input.focus();
                  }));
    }
  };
  var tmp;
  switch (match[0]) {
    case /* Yes */0 :
        tmp = "loading...";
        break;
    case /* No */1 :
        tmp = match$1[0];
        break;
    case /* None */2 :
        tmp = null;
        break;
    
  }
  return React.createElement("div", {
              className: "card card-compact w-56 bg-base-100 shadow-xl"
            }, React.createElement("div", {
                  className: "card-body"
                }, React.createElement("textarea", {
                      ref: setTextInputRef,
                      className: "textarea textarea-primary",
                      placeholder: "please input...",
                      value: text,
                      onChange: handleChange
                    }), React.createElement("button", {
                      className: "btn btn-primary btn-sm m-2",
                      onClick: translate
                    }, "Translate"), React.createElement("div", {
                      className: "text-secondary p-2 min-h-8"
                    }, tmp)));
}

var make = PopupApp;

export {
  make ,
}
/* react Not a pure module */
