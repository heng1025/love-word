// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Fixture from "../utils/Fixture.js";
import * as FavButton from "../../src/components/FavButton.js";
import * as TestBinding from "../utils/TestBinding.js";
import * as React$1 from "@testing-library/react";
import * as UserEvent from "@testing-library/user-event";

var trans = Fixture.baiduData;

var chromeSendMsgSpy = vi.spyOn(chrome.runtime, "sendMessage");

describe("FavButton component", (function () {
        chromeSendMsgSpy.mockResolvedValueOnce(false);
        test("renders correctly", (function () {
                TestBinding.ReactTestingLibrary.render(React.createElement(FavButton.make, {
                          text: "你好",
                          trans: trans
                        }), undefined, undefined, undefined, undefined, undefined);
                var favBtn = React$1.screen.getByRole("button", undefined);
                expect(favBtn).toBeInTheDocument();
                var starTitle = React$1.screen.getByTitle("star", undefined);
                expect(starTitle).toBeInTheDocument();
              }));
        test("can not add faved when text is empty", (async function () {
                chromeSendMsgSpy.mockResolvedValueOnce(false);
                TestBinding.ReactTestingLibrary.render(React.createElement(FavButton.make, {
                          text: "",
                          trans: trans
                        }), undefined, undefined, undefined, undefined, undefined);
                var favBtn = React$1.screen.getByRole("button", undefined);
                var user = UserEvent.userEvent.setup(undefined);
                await user.click(favBtn);
                var starTitle = React$1.screen.getByTitle("star", undefined);
                expect(starTitle).toBeInTheDocument();
              }));
        test("add/remove Faved when click button", (async function () {
                chromeSendMsgSpy.mockResolvedValueOnce(true);
                TestBinding.ReactTestingLibrary.render(React.createElement(FavButton.make, {
                          text: "你好",
                          trans: trans
                        }), undefined, undefined, undefined, undefined, undefined);
                var favBtn = React$1.screen.getByRole("button", undefined);
                var user = UserEvent.userEvent.setup(undefined);
                await user.click(favBtn);
                var starFillTitle = React$1.screen.getByTitle("star-fill", undefined);
                expect(starFillTitle).toBeInTheDocument();
                chromeSendMsgSpy.mockResolvedValueOnce(false);
                await user.click(favBtn);
                var starTitle = React$1.screen.getByTitle("star", undefined);
                expect(starTitle).toBeInTheDocument();
              }));
      }));

export {
  trans ,
  chromeSendMsgSpy ,
}
/* chromeSendMsgSpy Not a pure module */
