// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Fixture from "../utils/Fixture.js";
import * as TestBinding from "../utils/TestBinding.js";
import * as MachineTPanel from "../../src/components/MachineTPanel.js";
import * as React$1 from "@testing-library/react";
import * as UserEvent from "@testing-library/user-event";

describe("MachineTpanel component", (function () {
        test("renders correctly", (function () {
                TestBinding.ReactTestingLibrary.render(React.createElement(MachineTPanel.make, {
                          data: Fixture.baiduData
                        }), undefined, undefined, undefined, undefined, undefined);
                var translation = React$1.screen.getByText("hello", undefined);
                var playBtn = React$1.screen.getByRole("button", undefined);
                expect(translation).toBeInTheDocument();
                expect(playBtn).toBeInTheDocument();
              }));
        test("play button works", (async function () {
                TestBinding.ReactTestingLibrary.render(React.createElement(MachineTPanel.make, {
                          data: Fixture.baiduData
                        }), undefined, undefined, undefined, undefined, undefined);
                var speaker = React$1.screen.getByTestId("play", undefined);
                var user = UserEvent.userEvent.setup(undefined);
                await user.click(speaker);
                expect(speaker).toHaveClass("animate-fadeInOut-200ms");
                var audioElement = React$1.screen.getByTestId("audioPlayer", undefined);
                React$1.fireEvent(audioElement, new (window.Event)("ended"));
                return await React$1.waitFor((function () {
                              expect(speaker).not.toHaveClass("animate-fadeInOut-200ms");
                            }), undefined);
              }));
      }));

export {
  
}
/*  Not a pure module */
