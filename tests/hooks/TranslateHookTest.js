// Generated by ReScript, PLEASE EDIT WITH CARE

import * as TranslateHook from "../../src/hooks/TranslateHook.js";
import * as React from "@testing-library/react";

var sendMessageSpy = vi.spyOn(chrome.runtime, "sendMessage");

function initTranslate(textOpt) {
  var text = textOpt !== undefined ? textOpt : "hello";
  return React.renderHook(function () {
              return TranslateHook.useTranslate(text);
            }).result;
}

describe("useTranslate", (function () {
        beforeAll(function () {
              return sendMessageSpy.mockResolvedValue({
                          TAG: "Ok",
                          _0: "你好"
                        });
            });
        test("tranlate loading status", (async function () {
                var result = initTranslate(undefined);
                return await React.waitFor((function () {
                              var current = result.current;
                              expect(current.loading).toBe(false);
                            }), undefined);
              }));
        test("translate correctly", (async function () {
                var result = initTranslate(undefined);
                return await React.waitFor((function () {
                              var current = result.current;
                              expect(current.data).toStrictEqual({
                                    TAG: "Ok",
                                    _0: "你好"
                                  });
                            }), undefined);
              }));
        test("translate error", (async function () {
                sendMessageSpy.mockResolvedValueOnce({
                      TAG: "Error",
                      _0: "error"
                    });
                var result = initTranslate(undefined);
                return await React.waitFor((function () {
                              var current = result.current;
                              expect(current.data).toStrictEqual({
                                    TAG: "Error",
                                    _0: "error"
                                  });
                            }), undefined);
              }));
        test("translate source is empty", (async function () {
                var result = initTranslate("");
                return await React.waitFor((function () {
                              var current = result.current;
                              expect(current.data).toStrictEqual(undefined);
                            }), undefined);
              }));
      }));

export {
  sendMessageSpy ,
  initTranslate ,
}
/* sendMessageSpy Not a pure module */
